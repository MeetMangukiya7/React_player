{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","setSongInfo","setSongs","songInfo","songs","setCurrentSong","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cb7e507.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ( { audioRef, currentSong, isPlaying, setIsPlaying, setSongInfo, setSongs, songInfo, songs, setCurrentSong } ) => {\r\n   const activeLibraryHandler = (nextPrev) => {\r\n      // add active state\r\n      const newSongs = songs.map((song) => {\r\n        if(song.id === nextPrev.id){\r\n            return{\r\n                ...song,\r\n                active:true,\r\n            }\r\n        }else{\r\n            return{\r\n                ...song,\r\n                active: false,\r\n            }\r\n        }\r\n    })\r\n    setSongs(newSongs);\r\n   }\r\n  //Event Handler\r\n   const playSongHandler = () => {\r\n      if(isPlaying){\r\n        audioRef.current.pause();\r\n        setIsPlaying(!isPlaying);\r\n      }else{\r\n        audioRef.current.play();\r\n        setIsPlaying(!isPlaying);\r\n      }\r\n   };\r\n\r\n   const getTime = (time) => {\r\n    return(\r\n      Math.floor(time / 60 ) + \".\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    )\r\n   }\r\n   const dragHandler = (e) => {\r\n     audioRef.current.currentTime = e.target.value;\r\n     setSongInfo({ ...songInfo, currentTime: e.target.value })\r\n   }\r\n   const skipTrackHandler = async (direction) => {\r\n     let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n     if(direction === 'skip-forward'){\r\n     await setCurrentSong(songs[(currentIndex + 1) % songs.length])\r\n     activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\r\n     }\r\n     if(direction === 'skip-back'){\r\n       if((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1])\r\n        activeLibraryHandler(songs[songs.length - 1])\r\n         if(isPlaying) audioRef.current.play();\r\n         return;\r\n       }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length])\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length])\r\n      }\r\n      if(isPlaying) audioRef.current.play();\r\n   }\r\n//Add the styles \r\nconst trackAnim = {\r\n  transform: `translateX(${songInfo.animationPercentage}%)`\r\n}\r\n    return(\r\n        <div className=\"player\" >\r\n          <div className=\"time-control\">\r\n           <p>{getTime(songInfo.currentTime)}</p>\r\n           <div style={{background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`, }} className=\"track\">\r\n                <input min={0} \r\n                  max={songInfo.duration || 0 } \r\n                  value={songInfo.currentTime} \r\n                  onChange={dragHandler}\r\n                  type=\"range\" />\r\n                  <div style={trackAnim} className=\"animate-track\"></div>\r\n            </div>      \r\n           <p>{songInfo.duration ? getTime(songInfo.duration) : \"0.00\"}</p>\r\n          </div>\r\n          <div className=\"play-control\">\r\n          <FontAwesomeIcon onClick={() => skipTrackHandler(\"skip-back\")} className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\r\n          <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay} />\r\n          <FontAwesomeIcon onClick={() => skipTrackHandler(\"skip-forward\")} className=\"skip-forward\" size=\"2x\" icon={faAngleRight} />\r\n          </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","import { faCalendarMinus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\n\r\nconst Song = ({currentSong}) => {\r\n    return(\r\n        <div className=\"song-container\">\r\n        <img alt={currentSong.name} src={currentSong.cover} ></img>\r\n        <h2>{currentSong.name}</h2>\r\n        <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Song;","import React from \"react\";\r\n\r\nconst LibrarySong = ({ song, \r\n                       songs, \r\n                       setCurrentSong, \r\n                       id, \r\n                       audioRef, \r\n                       isPlaying,\r\n                       setSongs}) => {\r\n    const songSelectHandler = async () => {\r\n        const selectedSong = songs.filter((state) => state.id ===id);\r\n        await setCurrentSong(selectedSong[0]);\r\n        // add active state\r\n        const newSongs = songs.map((song) => {\r\n            if(song.id === id){\r\n                return{\r\n                    ...song,\r\n                    active:true,\r\n                }\r\n            }else{\r\n                return{\r\n                    ...song,\r\n                    active: false,\r\n                }\r\n            }\r\n        })\r\n        setSongs(newSongs);\r\n        //check if the song is playing\r\n        if(isPlaying) audioRef.current.play();\r\n    \r\n    }\r\n    return(\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"} `}>\r\n        <img alt={song.name} src={song.cover} ></img>\r\n         <div className=\"song-description\">\r\n          <h3>{song.name}</h3>\r\n          <h4>{song.artist}</h4>\r\n         </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LibrarySong;","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs, libraryStatus}) => {\r\n    return(\r\n        <div  className= {`library ${libraryStatus ? 'active-library' : ''} `} >\r\n           <h2>Library</h2>\r\n           <div className=\"library-songs\">\r\n            {songs.map((song) => (\r\n                <LibrarySong  \r\n                songs={songs} \r\n                setCurrentSong={setCurrentSong}  \r\n                song={song}\r\n                id={song.id}\r\n                key={song.id}\r\n                audioRef={audioRef}\r\n                isPlaying={isPlaying}\r\n                setSongs={setSongs}\r\n                />\r\n            ))}\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from 'react';\r\nimport { FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav =( {setLibraryStatus, libraryStatus} ) => {\r\n    return (\r\n        <nav>\r\n        <h1>Waves</h1>\r\n        <button onClick={() => setLibraryStatus(!libraryStatus) }>\r\n         Library\r\n         <FontAwesomeIcon icon={faMusic} />\r\n        </button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;","//import React, {useState} from \"react\";\r\nimport { useState, useRef } from \"react\";\r\n\r\n//import style\r\nimport \"./styles/app.scss\";\r\n//import components\r\nimport Player from \"./components/Player\";\r\nimport Song from \"./components/Song\";\r\nimport Library from \"./components/Library\";\r\nimport Nav from \"./components/Nav\";\r\n//import util\r\nimport data from \"./data\";\r\n\r\nfunction App() {\r\n  //Ref\r\n  const audioRef = useRef(null);\r\n  //State\r\n  const [songs, setSongs] = useState(data());\r\n  const [currentSong, setCurrentSong] = useState(songs[0]);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [songInfo, setSongInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n    animationPercentage: 0,\r\n  });\r\n  const [libraryStatus, setLibraryStatus] = useState(false);\r\n  const timeUpdateHandler = (e) => {\r\n    const current = e.target.currentTime;\r\n    const duration = e.target.duration;\r\n    //calculate percentage\r\n    const roundedCurrent = Math.round(current);\r\n    const roundedDuration = Math.round(duration);\r\n    const animation = Math.round((roundedCurrent/ roundedDuration) * 100 );\r\n    setSongInfo({...songInfo, \r\n                 currentTime: current, \r\n                 duration, \r\n                 animationPercentage: animation, })\r\n };\r\n const songEndHandler = async () => {\r\n  let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n  await setCurrentSong(songs[(currentIndex + 1) % songs.length])\r\n  if(isPlaying) audioRef.current.play();\r\n\r\n }\r\n  return (\r\n    <div className= { `App ${libraryStatus ? 'library-active' : \"\"}` }> \r\n         <Nav  setLibraryStatus={setLibraryStatus}\r\n               libraryStatus={libraryStatus} \r\n               />\r\n         <Song currentSong= {currentSong} />\r\n         <Player \r\n                 audioRef={audioRef}\r\n                 setIsPlaying={setIsPlaying}\r\n                 isPlaying={isPlaying}\r\n                 currentSong= {currentSong}\r\n                 setSongInfo={setSongInfo}\r\n                 songInfo={songInfo}\r\n                 songs={songs}\r\n                 setCurrentSong={setCurrentSong}\r\n                 setSongs={setSongs}\r\n                 />\r\n         <Library \r\n                  audioRef={audioRef} \r\n                  songs={songs} \r\n                  setCurrentSong={setCurrentSong}\r\n                  isPlaying={isPlaying}\r\n                  setSongs={setSongs}\r\n                  libraryStatus={libraryStatus}\r\n                  />\r\n         <audio \r\n          onTimeUpdate={timeUpdateHandler} \r\n          onLoadedMetadata={timeUpdateHandler}\r\n          ref={audioRef} \r\n          src={currentSong.audio} \r\n          onEnded={songEndHandler} >\r\n      </audio>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}